- hosts: all
  become: true

  tasks:
    # Installer les paquets nécessaires
    - name: Installer les paquets requis
      apt:
        name: "{{ item }}"
        state: latest
      loop:
        - docker.io
        - ufw

    - name: Update and upgrade all packages to the latest version
      ansible.builtin.apt:
        update_cache: true
        upgrade: dist
        cache_valid_time: 3600

    - name: Install required packages
      ansible.builtin.apt:
        pkg:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - software-properties-common

    - name: Create directory for Docker's GPG key
      ansible.builtin.file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Add Docker's official GPG key
      ansible.builtin.apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        keyring: /etc/apt/keyrings/docker.gpg
        state: present

    - name: Print architecture variables
      ansible.builtin.debug:
        msg: "Architecture: {{ ansible_architecture }}, Codename: {{ ansible_lsb.codename }}"

    - name: Add Docker repository
      ansible.builtin.apt_repository:
        repo: >-
          deb [arch={{ arch_mapping[ansible_architecture] | default(ansible_architecture) }}
          signed-by=/etc/apt/keyrings/docker.gpg]
          https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable
        filename: docker
        state: present

    - name: Install Docker and related packages
      ansible.builtin.apt:
        name: "{{ item }}"
        state: present
        update_cache: true
      loop:
        - docker-ce
        - docker-ce-cli
        - containerd.io
        - docker-buildx-plugin
        - docker-compose-plugin

    - name: Add Docker group
      ansible.builtin.group:
        name: docker
        state: present

    - name: Add user to Docker group
      ansible.builtin.user:
        name: "{{ ansible_user }}"
        groups: docker
        append: true

    - name: Enable and start Docker services
      ansible.builtin.systemd:
        name: "{{ item }}"
        enabled: true
        state: started
      loop:
        - docker.service
        - containerd.service

    # Ajouter un utilisateur sudoer
    - name: Ajouter un utilisateur sudoer
      user:
        name: adminuser
        groups: sudo
        shell: /bin/bash
        password: "{{ 'admin123!' | password_hash('sha512') }}"  # Remplacez 'mypassword' par un mot de passe sécurisé

    # Configurer SSH pour n'accepter que les connexions par clé
    - name: Configurer SSH pour n'accepter que les connexions par clé
      copy:
        src: sshd_config
        dest: /etc/ssh/sshd_config
      notify: Restart SSH

    # Configurer le pare-feu avec UFW
    - name: Autoriser les ports 22, 80 et 443 en TCP via UFW
      ufw:
        rule: allow
        port: "{{ item }}"
        proto: tcp
      loop:
        - 22
        - 80
        - 443
      notify: Reload UFW

  handlers:
    - name: Restart SSH
      service:
        name: sshd
        state: restarted

    - name: Reload UFW
      service:
        name: ufw
        state: reloaded
